(indicator_series[i,"Year"] == (indicator_series[j, "Year"] + 1))
&(indicator_series[i,"Product.categories"] == indicator_series[j,"Product.categories"])
&(indicator_series[i,"Indicator"] == indicator_series[j,"Indicator"])
){
#print(indicator_series[i,])
#print(indicator_series[j,])
if(!is.na(indicator_series[j,]["value"])){
ind_name <- paste("Var", indicator_series[i, "Indicator"])
#print("Encontrou antecessor!")
novo_valor <- indicator_series[i, "value"]/indicator_series[j, "value"]
nova_linha <- list(indicator_series[i,"Partner"],
indicator_series[i,"Product.categories"],
ind_name,
indicator_series[i, "Year"],
novo_valor
)
indicator_series <- rbind(
indicator_series, nova_linha)
}
}
}
}
}
teste <- calcula_variacao_anual(indonesia_trade_long)
View(indonesia_trade_long)
calcula_variacao_anual <- function(indicator_series){
for( i in 1:nrow(indicator_series)){
print(i)
for(j in 1:nrow(indicator_series)){
if(
(indicator_series[i,"Year"] == (indicator_series[j, "Year"] + 1))
&(indicator_series[i,"Product.categories"] == indicator_series[j,"Product.categories"])
&(indicator_series[i,"Indicator"] == indicator_series[j,"Indicator"])
){
#print(indicator_series[i,])
#print(indicator_series[j,])
if(!is.na(indicator_series[j,]["value"])){
ind_name <- paste("Var", indicator_series[i, "Indicator"])
#print("Encontrou antecessor!")
novo_valor <- indicator_series[i, "value"]/indicator_series[j, "value"]
nova_linha <- list(indicator_series[i,"Partner"],
indicator_series[i,"Product.categories"],
ind_name,
indicator_series[i, "Year"],
novo_valor
)
indicator_series <- rbind(
indicator_series, nova_linha)
}
}
}
}
returnValue(indicator_series)
}
teste <- calcula_variacao_anual(indonesia_trade_long)
View(teste)
indonesia_trade_long <- calcula_variacao_anual(indonesia_trade_long)
plot(
x = indonesia_trade_long[which(
(indonesia_trade_long$Product.categories == "All Products")
&(indonesia_trade_long$Indicator == "Var Exports (in US$ Mil)")
),]$Year,
y = indonesia_trade_long[which(
(indonesia_trade_long$Product.categories == "All Products")
&(indonesia_trade_long$Indicator == "Var Exports (in US$ Mil)")
),]$value,
type = "l"
)
plot(
x = indonesia_trade_long[which(
(indonesia_trade_long$Product.categories == "All Products")
&(indonesia_trade_long$Indicator == "Var Exports (in US$ Mil)")
),]$Year,
y = indonesia_trade_long[which(
(indonesia_trade_long$Product.categories == "All Products")
&(indonesia_trade_long$Indicator == "Var Exports (in US$ Mil)")
),]$value - 1,
type = "l"
)
countries <- data.frame("country_id" = NULL, "country_name" = NULL, "country_code" = NULL)
countries <- data.frame("country_id" = =c(NULL), "country_name" = c(NULL), "country_code" = c(NULL))
countries <- data.frame("country_id" =c(NULL), "country_name" = c(NULL), "country_code" = c(NULL))
names(countries)
countries <- data.frame(
"country_id" =c(NULL),
"country_name" = c(NULL),
"country_code" = c(NULL),
stringsAsFactors = FALSE
)
countries <- data.frame(
"country_id" =c(1),
"country_name" = c(1),
"country_code" = c(1),
stringsAsFactors = FALSE
)
countries <- data.frame( stringsAsFactors = FALSE )
names(countries) <- c("country_id", "country_name", "country_code")
names(countries) <- c("country_id", "country_name", "country_code")
x <- pnorm(q, 120, 40)
x <- pnorm(q = 0.1, mean =  120, sd = 40)
x
x <- pnorm(q = 0.006, mean =  120, sd = 40)
x
pnorm(5)
pnorm(0.5)
pnorm(0)
pnorm(1)
pnorm(1.96)
pnorm(-1.96)
qnorm(0.975)
dnorm(1.96)
dnorm(0)
trade = read.csv('wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV')
trade = read.csv('/wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
trade = read.csv('wits_en_trade_summary_allcountries_allyears\en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
trade = read.csv('wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
setwd('F:/Google Drive/Privado/Faculdade/Estatística 2020/PRO3200')
trade = read.csv('/wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
read.csv('wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
getwd()
read.csv('wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = 'False')
trade = read.csv('wits_en_trade_summary_allcountries_allyears/en_USA_AllYears_WITS_Trade_Summary.CSV', sep = ',', dec = '.', stringsAsFactors = FALSE)
View(trade)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', sep = ',', dec = '.', stringsAsFactors = FALSE)
View(countries)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', sep = ',', dec = '.', stringsAsFactors = FALSE)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', skip = 3, sep = ',', dec = '.', stringsAsFactors = FALSE)
View(deflator_table)
a = c(12, 88, 64)
b = = c(2, 8, 16)
b = c(2, 8, 16)
a/b
trade[1,1]
deflator['Country.Name' == 'United States']
deflator_table['Country.Name' == 'United States']
deflator_table[,'Country.Name' == 'United States']
deflator_table[,'Country.Name' == 'United States',]
deflator_table['Country.Name' == 'United States',]
deflator_table['Country.Name' == 'United States', 1]
deflator_table[deflator_table[['Country.Name']] == 'United States',]
a = deflator_table[deflator_table[['Country.Name']] == 'United States',]
View(a)
View(deflator_table)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', sep = ',', dec = '.', stringsAsFactors = FALSE)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', skip = 2, sep = ',', dec = '.', stringsAsFactors = FALSE)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', skip = 3, sep = ',', dec = '.', stringsAsFactors = FALSE)
View(deflator_table)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', header = TRUE, sep = ',', dec = '.', stringsAsFactors = FALSE)
View(deflator_table)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', header = TRUE, sep = ',', dec = '.', stringsAsFactors = FALSE)
a = deflator_table[1, 59:54]
a
a = deflator_table[1, 59:64]
a
a[2]
a[1, 2]
a[1, -1]
a[1, 1]
b
b/2
a
a/2
View(trade)
b = rev(b)
a
a = rev(a)
a
b[1]
View(trade)
plot(trade[1, 36:6], 1988:2018)
plot(trade[1, 36:6], c(1988:2018))
plot(trade[1, 36:6], c(1988:2018))
plot(trade[1, 36:6])
b = c(1988:2018)
plot(x = b, y = rev(trade[1, 6:36]))
plot(x = b, y = rev(trade[1, 6:36]), type ='l')
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[['Country.Name']] == reporter, 48:78]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
print(reporter)
dv <- d[d[['Country.Name']] == reporter, 48:78]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
print(reporter)
dv <- d[d[[1]] == reporter, 48:78]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator_table = read.csv('API_NY.GDP.DEFL.ZS_DS2_en_csv_v2_1070444.csv', header = TRUE, sep = ',', dec = '.', stringsAsFactors = FALSE)
View(deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
print(reporter)
dv <- d[d[1] == reporter, 48:78]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
View(deflator_table)
trade2 = deflator(trade, deflator_table)
2019 - 1959
deflator <- function(t, d){
reporter = t[1 , 1]
print(reporter)
dv <- d[d[1] == reporter, 34:64]
print(dv)
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
print(reporter)
dv <- d[d[1] == reporter, 33:63]
print(dv)
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
print(firstNonNA)
lastNonNA = max(NonNAindex)
print(lastNonNA)
cagr = (dv[1, lastNonNAdv] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA == 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA] - dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
print(cagr)
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA]/dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
print(cagr)
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = dv/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA]/dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv[1,] = dv[1,]/tail(a[1,], n = 1) #Muda o ano base para 2018
dv = rev(dv)
print(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
b/2
b/2
b/4
tail(a, n = 1)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA]/dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = rev(dv)
dv[1,] = dv[1,]/a[1,1]
print(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
a
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA]/dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = rev(dv)
dv[1,] = dv[1,]/dv[1,1]
print(dv)
for(i in t){
i[6:36] = i[6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
deflator <- function(t, d){
reporter = t[1 , 1]
dv <- d[d[1] == reporter, 33:63]
#A próxima parte existe para corrigir os 'buracos'com valores NA
NonNAindex = which(!is.na(dv[1,]))
firstNonNA = min(NonNAindex)
lastNonNA = max(NonNAindex)
cagr = (dv[1, lastNonNA]/dv[1, firstNonNA])^(1/(lastNonNA - firstNonNA)) #Inflação histórica média
if(firstNonNA != 1){
dv[1, 1] = dv[1, lastNonNA]/(cagr^(lastNonNA - 1)) #Garante que o primeiro valor não é nulo
}
for(i in 1:length(dv)){
if(is.na(dv[1, i])){
dv[1, i] = dv[1, i - 1]*cagr #Assume a inflação histórica média para os anos em que não há dados
}
}
dv = rev(dv)
dv[1,] = dv[1,]/dv[1,1]
for(i in 1:nrow(t)){
t[i, 6:36] = t[i, 6:36]/dv
}
return(t)
}
trade2 = deflator(trade, deflator_table)
plot(x = b, y = rev(trade2[1, 6:36]), type ='l')
